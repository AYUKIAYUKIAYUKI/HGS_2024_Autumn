//============================================================================
// 
// 軌跡 [trajectory.cpp]
// Author : 久保市篤武
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "trajectory.h"// 軌跡ヘッダーファイル
#include <player.h>

//============================================================================
// コンストラクタ
//============================================================================
CTrajectory::CTrajectory(int nPriority) : CObject_2D{ nPriority }
{
}

//============================================================================
// デストラクタ
//============================================================================
CTrajectory::~CTrajectory()
{
}

//============================================================================
// 初期設定
//============================================================================
HRESULT CTrajectory::Init()
{
	// 2Dオブジェクト初期設定
	if (FAILED(CObject_2D::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//============================================================================
// 終了処理
//============================================================================
void CTrajectory::Uninit()
{
	// 2Dオブジェクト終了処理
	CObject_2D::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CTrajectory::Update()
{
	// ローカル変数宣言
	D3DXVECTOR3 size = GetSize();// サイズ情報

	// サイズ縮小
	size.x--;
	size.y--;

	// 更新されたサイズ情報を設定
	SetSize(size);

	// サイズが0になった場合
	if (size.x <= 0.0f || size.y <= 0.0f)
	{
		// 死亡フラグをtrueにする
		SetRelease();
	}

	// 2Dオブジェクト更新処理
	CObject_2D::Update();
}

//============================================================================
// 描画処理
//============================================================================
void CTrajectory::Draw()
{
	// 2Dオブジェクト描画処理
	CObject_2D::Draw();
}

//============================================================================
// 生成処理
//============================================================================
CTrajectory* CTrajectory::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// メモリを動的確保
	CTrajectory* pTrajectory = new CTrajectory();

	// パラメータ設定
	pTrajectory->SetSize(size);// サイズ
	pTrajectory->SetPos(pos);// 座標
	pTrajectory->SetCol({ 0.0f, 0.7f, 1.0f, 0.3f });// カラー

	D3DXVECTOR3 rot = { 0.0f, 0.0f, static_cast<float>(rand() % 629 - 314) * 0.01f };
	pTrajectory->SetRot(rot);//向き

	// 初期化処理
	pTrajectory->Init();

	return pTrajectory;
}
